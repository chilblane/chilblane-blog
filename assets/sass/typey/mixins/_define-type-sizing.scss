@use "../defaults";
@use "../functions/em-calculators";

// Define defaults (use this in the HTML element).
//
// @param number $size
//   (optional) The font-size. Use to set to anything other than $base-font-size.
// @param number $line-height
//   (optional) The line-height. Use to set to anything other than $base-line-height.
//   Set to a ratio when $line-height-as-ratio is true. Will default to $base-line-height-ratio.
//   Set to false if you do not want to change a ratio of line-height already set.
@mixin define-type-sizing(
  $size: defaults.$base-font-size,
  $line-height: defaults.$base-line-height
) {
  @if defaults.$base-unit == rem or defaults.$base-unit == em {
    font-size: calc($size / defaults.$browser-font-size) * 100%;
  }
  @if defaults.$base-unit == px {
    font-size: $size;
  }

  @if $line-height != false {
    @if defaults.$line-height-method == "ratio" {
      @if $line-height == defaults.$base-line-height {
        $line-height: defaults.$base-line-height-ratio;
      }
      line-height: $line-height;
    } @else {
      @if defaults.$base-unit == rem or defaults.$base-unit == em {
        // In the html element, rem means relative to browser default font size; em means relative to html's font size.
        line-height: em-calculators.calculate-em-px($line-height, $size);
      }
      @if defaults.$base-unit == px {
        line-height: $line-height;
      }
    }
  }

  @if defaults.$auto-print-sizing == true {
    @if defaults.$base-unit == rem or defaults.$base-unit == em {
      @media print {
        font-size: defaults.$print-font-size;
      }
    } @else {
      @warn "As you are not using a relative base unit (rem or em) automatic print media sizing will not work. Set $auto-print-sizing to false to hide this warning";
    }
  }
}
