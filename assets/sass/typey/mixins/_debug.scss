@use "../defaults";
@use "../functions/sizers";
@use "../functions/validators";

// Output a horizontal grid to help with debugging typography.
//
// @param number $line-height
//   Multiple of line height to be used, line-height ratio or px value to be converted.
// @param number|string $context
//   (optional) Only used if em is the $base-unit. The value of the
//   elements/parents font-size if it differs from $base-font-size.
//   Specified as a t-shirt size or value in px.
// @param string $color
//   (optional) Use a custom grid color.
@mixin typey-debug-grid(
  $line-height: defaults.$base-line-height,
  $context: defaults.$base-font-size,
  $color: defaults.$typey-debug-color
) {
  @if defaults.$typey-debug == true {
    $allowed-types: "multiplier", "px";
    $type: validators.typey-validator($line-height, $allowed-types);
    $grid-height: 0;
    @if defaults.$line-height-method == "rhythm" {
      $grid-height: sizers.line-height($line-height, $context);
    }
    @if defaults.$line-height-method == "ratio" {
      @if $line-height == defaults.$base-line-height {
        $grid-height: sizers.line-height(
            defaults.$base-line-height-ratio,
            $context
          ) *
          1em;
      } @else {
        $grid-height: sizers.line-height($line-height, $context) * 1em;
      }
    }

    position: relative;
    background-image: repeating-linear-gradient(
      180deg,
      $color,
      $color 1px,
      transparent 1px,
      transparent $grid-height
    );

    &:after {
      position: absolute;
      bottom: -1px;
      left: 0;
      background-color: $color;
      width: 100%;
      height: 1px;
      content: "";
    }
  }
}
